version: '2.2'
services:
  psql:
    image: postgres:latest
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES="order_db","auth_user_db","payment_db","inventory_db","delivery_db"
      - POSTGRES_USER=postgre_user
      - POSTGRES_PASSWORD=postgre_secret_password
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - database-data:/var/lib/postgresql/data/

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "my_topic:1:3"
    volumes:
      - kafka:/data
    restart: on-failure
  grafana:
    build: './monitoring/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus
    ports:
      - 9091:9090
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus

  # Convenient UI for Apache Kafka https://github.com/provectus/kafka-ui
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9999:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

volumes:
  database-data:
  kafka:
networks:
  monitoring:
